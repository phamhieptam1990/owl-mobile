platform :ios, '14.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug'         => :debug,
  'Debug-uat'     => :debug,
  'Debug-prod'    => :debug,
  'Profile'       => :release,
  'Profile-uat'   => :release,
  'Profile-prod'  => :release,
  'Release'       => :release,
  'Release-uat'   => :release,
  'Release-prod'  => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. Run 'flutter pub get' first."
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT=(.*)/)
    return matches[1].strip if matches
  end

  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting it and re-running 'flutter pub get'."
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # Chỉ dùng `use_frameworks!` với :static, KHÔNG dùng `use_modular_headers!`
  use_frameworks! :linkage => :static

  # Firebase (KHÔNG cần pod 'Firebase')
  pod 'FirebaseCore'
  pod 'FirebaseMessaging', :modular_headers => true
  pod 'FirebaseCrashlytics', :modular_headers => true
  pod 'FirebasePerformance', :modular_headers => true

  # Các pod khác
  pod 'FBSDKShareKit'
  pod 'BoringSSL-GRPC'

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  compiler_flags_key = 'COMPILER_FLAGS'

  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    next unless target.respond_to?(:build_configurations)

    is_resource_bundle = target.respond_to?(:product_type) && target.product_type == 'com.apple.product-type.bundle'
    target.build_configurations.each do |config|
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      config.build_settings.delete('IPHONEOS_DEPLOYMENT_TARGET')
     
      if RUBY_PLATFORM.include?('x86_64')
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      end

      flags = config.build_settings['OTHER_CFLAGS']
      if flags.is_a?(String)
        config.build_settings['OTHER_CFLAGS'] = flags.gsub(/\s*\-G\s*/, '')
      elsif flags.is_a?(Array)
        config.build_settings['OTHER_CFLAGS'] = flags.reject { |f| f.strip == '-G' }
      end

      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',
        'PERMISSION_CAMERA=1',
        'PERMISSION_MICROPHONE=1',
        'PERMISSION_PHOTOS=1',
        'PERMISSION_LOCATION=1',
        'PERMISSION_NOTIFICATIONS=1',
        'PERMISSION_MEDIA_LIBRARY=1',
      ]

      if is_resource_bundle
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
        config.build_settings['CODE_SIGNING_IDENTITY'] = '-'
        config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = '-'
      end
    end

    next unless target.respond_to?(:source_build_phase) && target.source_build_phase

    target.source_build_phase.files.each do |file|
      if file.settings && file.settings[compiler_flags_key]
        flags = file.settings[compiler_flags_key].split
        flags.reject! { |flag| flag == '-G' || flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
        file.settings[compiler_flags_key] = flags.join(' ')
      end
    end
  end

  # Đảm bảo toàn bộ dự án đều bật cấu hình này
  installer.pods_project.build_configurations.each do |config|
    config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
  end
end
